- hosts: all
  name: Autoconverted job legacy-group-based-policy-dsvm-aim from old job gate-group-based-policy-dsvm-aim-ubuntu-xenial-nv
  tasks:

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_UNSTACK=1
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_EXERCISES=0
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_INSTALL_TESTONLY=1
          export PROJECTS="openstack/group-based-policy $PROJECTS"
          export PROJECTS="openstack/group-based-policy-automation $PROJECTS"
          export PROJECTS="openstack/group-based-policy-ui $PROJECTS"
          export PROJECTS="openstack/python-group-based-policy-client $PROJECTS"
          export BRANCH_OVERRIDE=default
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          function gate_hook {
              bash -xe $BASE/new/group-based-policy/gbpservice/tests/contrib/gate_aim_hook.sh dsvm-aim
          }
          export -f gate_hook

          function post_test_hook {
             bash -xe $BASE/new/group-based-policy/gbpservice/tests/contrib/post_test_hook.sh dsvm-aim
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
      environment: '{{ zuul | zuul_legacy_vars }}'
