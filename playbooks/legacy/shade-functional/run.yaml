- hosts: all
  name: Autoconverted job legacy-shade-functional from old job gate-shade-functional
  tasks:

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          ENABLE_IDENTITY_V2=False
          Q_SERVICE_PLUGIN_CLASSES="qos"
          Q_ML2_PLUGIN_EXT_DRIVERS="qos,port_security"
          enable_plugin heat https://git.openstack.org/openstack/heat
          disable_service ceilometer-acentral
          disable_service ceilometer-acompute
          disable_service ceilometer-alarm-evaluator
          disable_service ceilometer-alarm-notifier
          disable_service ceilometer-anotification
          disable_service ceilometer-api
          disable_service ceilometer-collector
          disable_service horizon
          [[post-config|$CINDER_CONF]]
          [DEFAULT]
          osapi_max_limit=6

          EOF
        executable: /bin/bash
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          if [ "" == "-legacy" ]; then
              export DEVSTACK_GATE_NEUTRON=0
              # the local.conf macro does not allow for conditional setting.
              # Set the default above, then edit it here for the legacy case
              # where we want to flip the bit. This should work unless someone
              # redefines the /tmp/dg-local.conf location in the local_conf:
              # macro.
              sed -i -e 's/ENABLE_IDENTITY_V2=False/ENABLE_IDENTITY_V2=True/' /tmp/dg-local.conf
              sed -i -e '/Q_SERVICE_PLUGIN_CLASSES="qos"/d' /tmp/dg-local.conf
              sed -i -e '/Q_ML2_PLUGIN_EXT_DRIVERS="qos,port_security/d' /tmp/dg-local.conf
              export SHADE_USE_KEYSTONE_V2=1
          else
              export DEVSTACK_GATE_NEUTRON=1
          fi
          export DEVSTACK_GATE_HEAT=1
          export PYTHONUNBUFFERED=true
          export SHADE_HAS_DESIGNATE=0
          export SHADE_HAS_HEAT=1
          export SHADE_HAS_MAGNUM=0
          export SHADE_HAS_NEUTRON=$DEVSTACK_GATE_NEUTRON
          export SHADE_HAS_SWIFT=1
          if [ "" == "-py35" ]; then
              export SHADE_TOX_PYTHON=python3
          fi

          export PROJECTS="openstack-infra/shade $PROJECTS"
          if [ "" == "-libs" ]; then
              export PROJECTS="openstack/keystoneauth $PROJECTS"
              export PROJECTS="openstack/os-client-config $PROJECTS"
              export PROJECTS="openstack/python-keystoneclient $PROJECTS"
              export PROJECTS="openstack/python-novaclient $PROJECTS"

              if [ "" == "-legacy" ]; then
                  # The purpose of the -legacy-libs job is to test that latest
                  # libs work with old OpenStack. We do not want to install
                  # OpenStack from tip of master of the libs. We want to
                  # install tip of master of the libs into our functional venv.
                  export OVERRIDE_OS_CLIENT_CONFIG_PROJECT_BRANCH="master"
                  export OVERRIDE_KEYSTONEAUTH_PROJECT_BRANCH="master"
                  export OVERRIDE_PYTHON_NOVACLIENT_PROJECT_BRANCH="master"
                  export OVERRIDE_PYTHON_KEYSTONECLIENT_PROJECT_BRANCH="master"
              fi
          fi

          if [ "" == "-legacy" ]; then
              export BRANCH_OVERRIDE="stable/newton"
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          else
              export BRANCH_OVERRIDE="default"
          fi

          function post_test_hook {
              $BASE/new/shade/shade/tests/functional/hooks/post_test_hook.sh
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
      environment: '{{ zuul | zuul_legacy_vars }}'
