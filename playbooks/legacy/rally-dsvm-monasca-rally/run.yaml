- hosts: all
  name: Autoconverted job legacy-rally-dsvm-monasca-rally from old job gate-rally-dsvm-monasca-rally-ubuntu-xenial-nv
  tasks:

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x

          if [ $ZUUL_PROJECT == "openstack/rally" ] && [ $ZUUL_BRANCH != "master" ]; then
              export DEVSTACK_GATE_FEATURE_MATRIX="/opt/stack/new/rally/devstack/features.yaml"
          fi

          export PYTHONUNBUFFERED=true
          services=key,mysql,rabbit,n-api,n-cond,n-cpu,n-crt,n-sch,g-api,g-reg,q-agt,q-dhcp,q-l3,q-meta,q-svc
          export OVERRIDE_ENABLED_SERVICES=$services

          export PROJECTS="openstack/rally $PROJECTS"
          export PROJECTS="openstack/monasca-api $PROJECTS"
          export PROJECTS="openstack/monasca-persister $PROJECTS"
          export PROJECTS="openstack/monasca-common $PROJECTS"
          export PROJECTS="openstack/monasca-agent $PROJECTS"
          export PROJECTS="openstack/monasca-notification $PROJECTS"
          export PROJECTS="openstack/monasca-thresh $PROJECTS"
          export PROJECTS="openstack/monasca-statsd $PROJECTS"
          export PROJECTS="openstack/python-monascaclient $PROJECTS"

          export IDENTITY_API_VERSION=3

          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_EXERCISES=0
          export RALLY_SCENARIO=$ZUUL_SHORT_PROJECT_NAME-monasca

          export DEVSTACK_LOCAL_CONFIG="enable_plugin monasca-api git://git.openstack.org/openstack/monasca-api"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin rally git://git.openstack.org/openstack/rally"

          function pre_test_hook {
              source $BASE/new/monasca-api/devstack/pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              $BASE/new/rally/tests/ci/rally-gate.sh
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
      environment: '{{ zuul | zuul_legacy_vars }}'
