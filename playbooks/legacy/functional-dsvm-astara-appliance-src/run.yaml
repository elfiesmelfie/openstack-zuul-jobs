- hosts: all
  name: Autoconverted job legacy-functional-dsvm-astara-appliance-src from old job
    gate-functional-dsvm-astara-appliance-src-ubuntu-xenial
  tasks:

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_HORIZON=1
          export BRANCH_OVERRIDE=default
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          export PROJECTS="openstack/astara $PROJECTS"
          export PROJECTS="openstack/astara-neutron $PROJECTS"
          export PROJECTS="openstack/astara-appliance $PROJECTS"
          export PROJECTS="openstack/astara-horizon $PROJECTS"

          export DEVSTACK_LOCAL_CONFIG="enable_plugin astara https://git.openstack.org/openstack/astara"

          export BUILD_APPLIANCE=1
          if [ "$BUILD_APPLIANCE" == "1" ] ; then
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"BUILD_ASTARA_APPLIANCE_IMAGE=True"
          fi

          if [ "$DEVSTACK_GATE_TEMPEST" == "0" ]; then
              function post_test_hook {
                    source $BASE/new/devstack/openrc admin admin
                    cd /opt/stack/new/astara
                    sudo -H -E -u stack ./tools/run_functional.sh
              }
              export -f post_test_hook
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
      environment: '{{ zuul | zuul_legacy_vars }}'
