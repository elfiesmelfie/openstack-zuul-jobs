- hosts: all
  name: Autoconverted job legacy-tempest-dsvm-full-zmq from old job gate-tempest-dsvm-full-zmq-ubuntu-xenial-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          enable_plugin devstack-plugin-zmq git://git.openstack.org/openstack/devstack-plugin-zmq

          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=1
          export PROJECTS="openstack/devstack-plugin-zmq $PROJECTS"

          if [[ "zmq" = "sheepdog" ]]; then
              export DEVSTACK_GATE_TEMPEST_ALL_PLUGINS=1
              # As we are setting DEVSTACK_GATE_TEMPEST_ALL_PLUGINS, we need
              # to add the regex to limit the tests to the same as a tempest
              # -efull would run.
              export DEVSTACK_GATE_TEMPEST_REGEX='(?!.*\[.*\bslow\b.*\])(^tempest\.(api|scenario)|(^cinder\.tests.tempest))'
          else
              export DEVSTACK_GATE_TEMPEST_FULL=1
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
