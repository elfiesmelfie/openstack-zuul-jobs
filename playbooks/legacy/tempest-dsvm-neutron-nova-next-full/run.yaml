- hosts: all
  name: Autoconverted job legacy-tempest-dsvm-neutron-nova-next-full from old job
    gate-tempest-dsvm-neutron-nova-next-full-ubuntu-xenial-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          # NOTE(mriedem): placement is required starting in Ocata.
          export ENABLED_SERVICES=placement-api
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_FULL=1
          export DEVSTACK_GATE_NEUTRON=1
          # NOTE(mriedem): cells v2 is required starting in Ocata.
          export DEVSTACK_LOCAL_CONFIG="NOVA_CONFIGURE_CELLSV2=True"
          export BRANCH_OVERRIDE=default
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          # NOTE(mriedem): NOVA_USE_SERVICE_TOKEN is available starting in Pike
          stable_compare="stable/[a-o]"
          if [[ ! "$ZUUL_BRANCH" =~ $stable_compare ]] ; then
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"NOVA_USE_SERVICE_TOKEN=True"
          fi

          function post_test_hook {
              if [ -f $BASE/new/nova/tools/hooks/post_test_hook.sh ]; then
                  $BASE/new/nova/tools/hooks/post_test_hook.sh
              fi
          }
          export -f post_test_hook
          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
