- hosts: all
  name: Autoconverted job legacy-sahara-cli from old job gate-sahara-cli-ubuntu-xenial-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          enable_plugin sahara git://git.openstack.org/openstack/sahara
          enable_plugin heat git://git.openstack.org/openstack/heat
          TEMPEST_PLUGINS='/opt/stack/new/sahara-tests'

          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_REGEX="sahara_tempest_plugin.tests.cli"
          export KEEP_LOCALRC=1
          export PROJECTS="openstack/sahara $PROJECTS"
          export PROJECTS="openstack/sahara-tests $PROJECTS"

          if [ "$ZUUL_PROJECT" = "openstack/python-saharaclient" ]; then
              export DEVSTACK_PROJECT_FROM_GIT=python-saharaclient
          fi

          function pre_test_hook {
              cd /opt/stack/new/sahara-tests/tools/gate/cli_tests
              ./pre_test_hook.sh
          }

          export -f pre_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
