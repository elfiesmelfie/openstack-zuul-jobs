- name: Install gettext package
  package:
    name: gettext
    state: present
  become: yes

- name: Check to see if the constraints file exists
  stat:
    path: "{{ constraints_file|default('missing') }}"
    get_checksum: false
    get_mime: false
    get_md5: false
  register: stat_results
  when: constraints_file is defined

- name: Record file location
  set_fact:
    upper_constraints: "-c {{ constraints_file }}"
  when: not stat_results|skipped and stat_results.stat.exists

- name: Setup venv
  shell:
    chdir: '{{ zuul_work_dir }}'
    executable: /bin/bash
    cmd: |
      set -e
      set -x

      OPTIONAL_REQUIREMENTS_SOURCES="
      docs/requirements.txt
      requirements.txt
      test-requirements.txt
      "

      UPPER_CONSTRAINTS="{{ upper_constraints }}"
      python -m virtualenv .venv
      VENV=.venv/bin
      $VENV/pip install sphinx $UPPER_CONSTRAINTS
      $VENV/pip install openstackdocstheme $UPPER_CONSTRAINTS
      $VENV/pip install reno $UPPER_CONSTRAINTS

      # Install from other optional sources, ignoring errors.
      # TODO(jaegerandi): as below, these extra requirements are only
      # for things like oslosphix which some releasenotes jobs still
      # depend on.
      for reqfile in $OPTIONAL_REQUIREMENTS_SOURCES; do
          if [ -e $reqfile ] ; then
              $VENV/pip install -r $reqfile $UPPER_CONSTRAINTS || true
          fi
      done

      # Optionally, install local requirements
      if [ -e releasenotes/requirements.txt ] ; then
          $VENV/pip install -r releasenotes/requirements.txt $UPPER_CONSTRAINTS
      fi
      # TODO(jaegerandi): Remove once all repos are fixed.
      # Try installing current repo in case it needs to be available for
      # example for version number calculation. Ignore any failures here.
      if [ -f setup.cfg ] ; then
          $VENV/pip install $UPPER_CONSTRAINTS . || true
      fi
