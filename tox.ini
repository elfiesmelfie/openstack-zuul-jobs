[tox]
minversion = 1.6
skipsdist = True
envlist = linters

[testenv]
basepython = python3
install_command = pip install {opts} {packages}
deps = -r{toxinidir}/test-requirements.txt

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files.
deps = bindep
commands = bindep test

[testenv:docs]
deps =
  -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -W -b html -d doc/build/doctrees doc/source doc/build/html

[testenv:linters]
whitelist_externals = bash
passenv =
  # NOTE(pabelanger): if you'd like to run tox -elinters locally, you'll need
  # to export ANSIBLE_ROLES_PATH pointing to the currect repos.
  # see openstack-zuul-jobs-linters job for more information.
  ANSIBLE_ROLES_PATH
setenv =
  ANSIBLE_LIBRARY= {toxinidir}/tests/fake-ansible
commands =
  flake8 {posargs}
  bash -c "find playbooks -type d -name "legacy" -prune -o \
    -type f -regex '.*.y[a]ml' -print0 | xargs -t -n1 -0 \
    ansible-lint"
  bash -c 'find roles -maxdepth 1 -mindepth 1 -type d -printf "%p/\n" | \
    xargs -t -n1 ansible-lint'
  # Ansible Syntax Check
  bash -c "cd playbooks; find . -type f -regex '.*.y[a]?ml' -exec \
    ansible-playbook --syntax-check -i {toxinidir}/tests/inventory \{\} + > /dev/null"

[testenv:venv]
commands = {posargs}

[flake8]
# These are ignored intentionally in openstack-infra projects;
# please don't submit patches that solely correct them or enable them.
ignore = E125,E129,H
show-source = True
exclude = .venv,.tox,dist,doc,build,*.egg
